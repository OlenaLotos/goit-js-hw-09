{"mappings":"AAIA,IAAMA,MAAQC,SAASC,cAAc,oBAC/BC,YAAcF,SAASC,cAAc,gBAErCE,YAAcC,KAAKC,MAEnBC,QAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIL,KACjBM,gBAAiB,EACjBC,QAAA,SAAQC,GACNC,QAAQC,IAAIF,EAAc,IACpBA,EAAc,GAAKT,YACrBY,OAAOC,QAAQ,qCAAsC,CACrDC,SAAU,gBAKZf,YAAYgB,UAAW,EACvBhB,YAAYiB,iBAAiB,QAASC,MAAMR,EAAc,QAOhE,SAASS,UAAUC,GAEjB,IACMC,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EAGNE,EAAOC,KAAKC,MAAMP,EAAKI,GAAKI,SAAS,EAAG,KAExCC,EAAQH,KAAKC,MAAMP,EAAMI,EAAOD,GAAMK,SAAS,EAAG,KAElDE,EAAUJ,KAAKC,MAAMP,EAAOI,EAAOD,EAAQF,GAAQO,SAAS,EAAG,KAE/DG,EAAUL,KAAKC,MAAMP,EAAQI,EAAOD,EAAQF,EAZnC,KAYqDO,SAAS,EAAG,KAKhF,OAHEjB,QAAQC,IACR,SAAyBoB,OAAhBP,EAAK,aAA8BO,OAAnBH,EAAM,eAAkCG,OAArBF,EAAQ,eAAqBE,OAARD,IAE5D,CAAEN,OAAMI,QAAOC,UAASC,WArBjCE,UAAUpC,MAAOO,SAwBjB,IAAM8B,SAAW,SAACT,EAAMI,EAAOC,EAASC,GACtCjC,SAASC,cAAc,mBAAmBoC,YAAcV,EACxD3B,SAASC,cAAc,oBAAoBoC,YAAcN,EACzD/B,SAASC,cAAc,sBAAsBoC,YAAcL,EAC3DhC,SAASC,cAAc,sBAAsBoC,YAAcJ,GAGvDb,MAAQ,SAAAkB,GACZC,aAAY,WACV,IACIC,EAASnB,UADFiB,EAAe,IAAIlC,MAE9BgC,SAASI,EAAOb,KAAMa,EAAOT,MAAOS,EAAOR,QAASQ,EAAOP,WAC1D","sources":["src/js/02-timer.js"],"sourcesContent":["// import flatpickr from \"flatpickr\";\n// import \"flatpickr/dist/flatpickr.min.css\";\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst input = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\n\nconst currentDate = Date.now();\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n      if (selectedDates[0] < currentDate) {\n        Notify.failure('Please choose a date in the future', {\n        position: 'center-top',\n      });\n    //   window.alert('Please choose a date in the future');\n        \n    } else {\n      startButton.disabled = false;\n      startButton.addEventListener('click', timer(selectedDates[0]));\n    }\n  },\n};\n\nflatpickr(input, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day).padStart(2, '0');\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour).padStart(2, '0');\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute).padStart(2, '0');\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second).padStart(2, '0');\n\n    console.log(\n    `days: ${days}, hours: ${hours}, minutes: ${minutes}, seconds: ${seconds}`\n  );\n  return { days, hours, minutes, seconds };\n}\n\nconst showTime = (days, hours, minutes, seconds) => {\n  document.querySelector('span[data-days]').textContent = days;\n  document.querySelector('span[data-hours]').textContent = hours;\n  document.querySelector('span[data-minutes]').textContent = minutes;\n  document.querySelector('span[data-seconds]').textContent = seconds;\n};\n\nconst timer = selectedDate => {\n  setInterval(() => {\n    const ms = selectedDate - new Date();\n    let result = convertMs(ms);\n    showTime(result.days, result.hours, result.minutes, result.seconds);\n  }, 1000);\n};\n\n"],"names":["input","document","querySelector","startButton","currentDate","Date","now","options","enableTime","time_24hr","defaultDate","minuteIncrement","onClose","selectedDates","console","log","Notify","failure","position","disabled","addEventListener","timer","convertMs","ms","minute","second","hour","day","days","Math","floor","padStart","hours","minutes","seconds","concat","flatpickr","showTime","textContent","selectedDate","setInterval","result"],"version":3,"file":"02-timer.5fdc96d6.js.map"}